---
- name: Add admin group as passwordless sudoer
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: ^%admin
    line: "%admin ALL=(ALL) NOPASSWD: ALL"
    state: present
    validate: visudo -cf %s

- name: Add admins
  become: true
  ansible.builtin.user:
    name: "{{ item.username }}"
    group: admin
    groups:
      - users
    shell: /bin/bash
    state: present
  loop: "{{ users }}"
  when: item.admin

- name: Add users
  become: true
  ansible.builtin.user:
    name: "{{ item.username }}"
    group: users
    shell: /bin/bash
    state: present
  loop: "{{ users }}"
  when: not item.admin

- name: Add SSH authorized keys lists
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    state: present
  loop: "{{ users | subelements('ssh_keys_urls', skip_missing=true) }}"

- name: Add SSH authorized keys
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    state: present
  loop: "{{ users | subelements('ssh_keys', skip_missing=true) }}"

- name: Disable root SSH login
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?PermitRootLogin
    line: PermitRootLogin no
    state: present
  notify: SSH restart

- name: Disable empty password SSH login
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?PermitEmptyPasswords
    line: PermitEmptyPasswords no
  notify: SSH restart

- name: Disable password SSH login
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^(#\s*)?PasswordAuthentication
    line: PasswordAuthentication no
  notify: SSH restart
