---
default:
  image: ubuntu:latest
  before_script:
    - TZ="Europe/Prague"
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

stages:
  - validate
  - deploy
  - release

lint:
  stage: validate
  script:
    - apt-get update
    - apt-get upgrade -y
    - apt-get install --no-install-recommends -y ca-certificates git golang nodejs npm python3-pip shellcheck
    - pip3 install checkov gitlint pre-commit yamllint
    - curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
    - gitlint
    - tools/check-sanity
    - npm install -g markdownlint-cli
    - GO111MODULE=on go get mvdan.cc/sh/v3/cmd/shfmt@v3.3.1
    - PATH="$PATH:/root/go/bin"
    - GITLAB_PRIVATE_TOKEN="$GL_TOKEN" pre-commit run --all-files

deploy-prod:
  stage: deploy
  script:
    - echo "Deploy **production** environment \`prod\` to <https://example.com>"
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

deploy-stag:
  stage: deploy
  script:
    - echo "Deploy **staging** environment \`stag\` to <https://stag.example.com>"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-test:
  stage: deploy
  script:
    - echo "Deploy **testing/$CI_COMMIT_REF_SLUG** environment \`test-$CI_ENVIRONMENT_SLUG\` to <https://test-$CI_ENVIRONMENT_SLUG.example.com>"
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

deploy-dev:
  stage: deploy
  script:
    - echo "Deploy **development/$CI_COMMIT_REF_SLUG** environment \`dev-$CI_ENVIRONMENT_SLUG\` to <https://test-$CI_ENVIRONMENT_SLUG.example.com>"
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != "main"

release:
  stage: release
  script:
    - apt-get update
    - apt-get upgrade -y
    - apt-get install --no-install-recommends -y curl git npm
    - curl -sL https://deb.nodesource.com/setup_14.x -o setup_14.sh
    - bash ./setup_14.sh
    - apt-get install --no-install-recommends -y nodejs
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/github @semantic-release/git @semantic-release/changelog
    - npx semantic-release
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
