#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
LANG=C

# shellcheck source=./shellib/shellib.sh
. "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/shellib/shellib.sh"

# Run test file $1
function run_test_file() {
    if [ -f "$1" ] && [ -r "$1" ]; then
        info "running test file $1:" "$symbol_doing"
        if bats "$1"; then
            info "$1 done" "$symbol_done"
        else
            err "$1 failed" "$symbol_failed"
            return "$status_err"
        fi
    else
        err "Could not run test file $1"
        return "$status_err"
    fi
}

# Run named test set $1
function run_test_set() {
    if [ -f "$1" ] && [ -r "$1" ]; then
        info "running test set $1" "$symbol_doing"
        test_path="$(dirname "$1")"
        mapfile -t set_lines <"$1"
        for set_line in "${set_lines[@]}"; do
            case "$set_line" in
            '') ;;  # Ignore empty lines
            \#*) ;; # Ignore comments
            *\.bats | *\.set)
                run_test "$test_path/$set_line"
                ;;
            *)
                warn "Unexpected test set $1 line $set_line"
                ;;
            esac
        done
    else
        err "Could not run test set $1"
        return "$status_err"
    fi
}

# Run test file or test set $1
function run_test() {
    case "$1" in
    *.bats)
        run_test_file "$1"
        ;;
    *.set)
        run_test_set "$1"
        ;;
    *)
        err "Unknown test type $1"
        usage
        return "$status_err"
        ;;
    esac
}

# Print usage
function usage() {
    echo "Usage: ${TEST_ARGV:-$0} [path [...]]]"
    echo
    echo '    path  Path to test file or test set'
}

# Main
# For zero arguments: prints usage
# One or more arguments: runs test
function main() {
    if [ -z "${1+x}" ]; then
        usage
        return
    fi

    for arg in "$@"; do
        if [ -f "$arg" ]; then
            run_test "$arg"
        else
            err "Unknown test type $1"
            usage
            return "$status_err"
        fi
    done
}

# Skip execution under test
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    main "$@"
fi
